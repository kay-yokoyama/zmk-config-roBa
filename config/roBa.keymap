#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        RightClick {
            bindings = <&mkp MB2>;
            key-positions = <20 19>;
        };

        Del {
            bindings = <&kp DELETE>;
            key-positions = <8 7>;
        };

        PrevClick {
            bindings = <&mkp MB4>;
            key-positions = <31 32>;
        };

        ClickNext {
            bindings = <&mkp MB5>;
            key-positions = <30 31>;
        };

        ZH {
            bindings = <&kp GRAVE>;
            key-positions = <12 11>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E               &kp R     &kp T                                                &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D               &kp F     &kp G        &kp SEMI               &kp INT3         &kp H        &kp J  &kp K      &kp L    &lt 5 MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C               &kp V     &kp B        &lt 1 RIGHT_BRACKET    &lt 6 BACKSLASH  &kp N        &kp M  &kp COMMA  &kp DOT  &mt LEFT_SHIFT BACKSPACE
&mt LCTRL ESCAPE  &kp LEFT_WIN  &mt LEFT_ALT GRAVE  &mkp MB3  &lt 5 ENTER  &lt 1 TAB              &lt 1 BACKSPACE  &lt 2 SPACE                             &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT                                        &kp CARET     &kp AMPERSAND         &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp LBKT
&kp SLASH        &trans  &trans    &trans      &trans       &trans          &trans                &trans        &kp LS(LEFT_BRACKET)  &trans        &trans                &kp EQUAL
&trans           &trans  &trans    &trans      &trans       &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp KP_EQUAL  &kp INT3              &trans        &trans                &kp LS(INTERNATIONAL_1)
&trans           &trans  &trans    &trans      &trans       &trans          &trans                &trans                                                                  &kp LS(QUESTION)
            >;
        };

        NUM {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5                                 &trans  &trans  &kp LA(PRINTSCREEN)  &trans  &kp LA(LC(DELETE))
&kp F6  &kp F7  &kp F8  &kp F9   &kp F10  &kp LC(LA(C_MUTE))    &trans  &trans  &trans  &kp LG(LS(S))        &trans  &kp LC(ESCAPE)
&trans  &trans  &trans  &kp F11  &kp F12  &trans                &trans  &trans  &trans  &trans               &trans  &kp LC(LA(INS))
&trans  &trans  &trans  &trans   &trans   &trans                &trans  &trans                                       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOLUME_DOWN>;
        };

        ARROW {
            bindings = <
&trans    &kp LC(LG(LEFT))  &kp UP_ARROW    &kp LC(LG(RIGHT))  &trans                               &kp KP_MULTIPLY  &kp N7        &kp N8        &kp N9        &kp KP_PLUS
&trans    &kp LEFT_ARROW    &kp DOWN_ARROW  &kp RIGHT_ARROW    &kp SEMICOLON   &trans    &trans     &kp KP_SLASH     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_MINUS
&kp HOME  &kp PAGE_DOWN     &kp END         &kp PG_UP          &kp APOSTROPHE  &trans    &trans     &kp UNDER        &kp NUMBER_1  &kp NUMBER_2  &kt NUMBER_3  &kp BACKSPACE
&trans    &trans            &trans          &trans             &trans          &trans    &kp ENTER  &kp N0                                                     &kp QUESTION
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                            &trans
            >;
        };

        SCROLL {
            bindings = <
&trans    &kp LC(LG(LEFT))  &kp UP_ARROW    &kp LC(LG(RIGHT))  &trans                                 &kp KP_MULTIPLY  &kp N7        &kp N8        &kp N9        &kp KP_PLUS
&trans    &kp LEFT_ARROW    &kp DOWN_ARROW  &kp RIGHT_ARROW    &kp SEMICOLON   &mkp MB1    &trans     &kp KP_SLASH     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_MINUS
&kp HOME  &kp PAGE_DOWN     &kp END         &kp PG_UP          &kp APOSTROPHE  &trans      &trans     &kp UNDER        &kp NUMBER_1  &kp NUMBER_2  &kt NUMBER_3  &kp BACKSPACE
&trans    &trans            &trans          &trans             &trans          &trans      &kp ENTER  &kp N0                                                     &kp QUESTION
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN>;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
