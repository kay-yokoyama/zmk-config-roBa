#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        ZH {
            bindings = <&kp GRAVE>;
            key-positions = <11 12>;
        };

        Del {
            bindings = <&kp DEL>;
            key-positions = <7 8>;
        };

        RightClick {
            bindings = <&mkp MB2>;
            key-positions = <19 20>;
        };

        PrevClick {
            bindings = <&mkp MB4>;
            key-positions = <32 31>;
        };

        Ins {
            bindings = <&kp INS>;
            key-positions = <6 7>;
        };

        ClickNext {
            bindings = <&mkp MB5>;
            key-positions = <31 30>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <33>;
        };

        holdTapBehavior: holdTapBehavior {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAPBEHAVIOR";
            bindings = <&none>, <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            hold-trigger-key-positions = <33>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            bindings = <
&kp Q          &kp W         &kp E         &kp R     &kp T                                              &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A          &kp S         &kp D         &kp F     &kp G        &kp SEMICOLON        &kp INT_YEN      &kp H        &kp J  &kp K      &kp L    &lt 5 MINUS
&kp Z          &kp X         &kp C         &kp V     &kp B        &kp RIGHT_BRACKET    &lt 6 BACKSLASH  &kp N        &kp M  &kp COMMA  &kp DOT  &mt LEFT_SHIFT BACKSPACE
&mt LCTRL ESC  &kp LEFT_ALT  &kp LEFT_WIN  &mkp MB3  &lt 5 ENTER  &lt 3 TAB            &lt 1 BACKSPACE  &lt 2 SPACE                             &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        Mark {
            bindings = <
&kp EXCLAMATION             &kp AT           &kp HASH         &kp DOLLAR     &kp PERCENT                    &kp CARET   &kp AMPERSAND  &kp LS(N8)             &kp LS(N9)         &kp LBKT
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp SEMICOLON  &kp COMMA    &trans    &trans  &kp C_MUTE  &kp LS(LBKT)   &kp RIGHT_BRACKET      &kp BACKSLASH      &kp EQUAL
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp APOS       &kp PERIOD   &trans    &trans  &trans      &kp INT3       &kp LS(RIGHT_BRACKET)  &kp LS(BACKSLASH)  &kp INT1
&trans                      &trans           &trans           &trans         &trans       &trans    &trans  &trans                                                               &kp LS(SLASH)
            >;
        };

        Function {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5                                &trans      &trans  &kp LA(PRINTSCREEN)  &trans  &kp LC(LA(DELETE))
&kp F6  &kp F7  &kp F8  &kp F9   &kp F10  &trans    &kp C_VOLUME_UP    &trans      &trans  &kp LS(LG(S))        &trans  &kp LC(LS(ESCAPE))
&trans  &trans  &trans  &kp F11  &kp F12  &trans    &kp C_VOLUME_DOWN  &kp K_MUTE  &trans  &trans               &trans  &kp LC(LA(INS))
&trans  &trans  &trans  &trans   &trans   &trans    &trans             &trans                                           &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        Navigation {
            bindings = <
&trans    &kp LC(LG(LEFT_ARROW))  &kp UP_ARROW  &kp LC(LG(RIGHT_ARROW))  &trans                       &kp KP_MULTIPLY  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_PLUS
&trans    &kp LEFT_ARROW          &kp DOWN      &kp RIGHT_ARROW          &trans  &trans    &trans     &kp KP_SLASH     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_MINUS
&kp HOME  &kp PAGE_DOWN           &kp END       &kp PAGE_UP              &trans  &trans    &trans     &kp KP_EQUAL     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp UNDER
&trans    &trans                  &trans        &trans                   &trans  &trans    &kp ENTER  &kp NUMBER_0                                               &kp QUESTION
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                            &trans
            >;
        };

        SCROLL {
            bindings = <
&trans    &kp LC(LG(LEFT))  &kp UP_ARROW    &kp LG(LC(RIGHT))  &trans                          &kp KP_MULTIPLY  &kp N7        &kp N8        &kp N9        &kp KP_PLUS
&trans    &kp LEFT          &kp DOWN_ARROW  &kp RIGHT_ARROW    &trans  &trans    &trans        &kp KP_SLASH     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_MINUS
&kp HOME  &kp PAGE_DOWN     &kp END         &kp PG_UP          &trans  &trans    &trans        &kp KP_EQUAL     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp UNDER
&trans    &trans            &trans          &trans             &trans  &trans    &kp KP_ENTER  &kp N0                                                     &kp QUESTION
            >;
        };

        BT {
            bindings = <
&trans  &trans        &trans        &trans        &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;
        };
    };
};
